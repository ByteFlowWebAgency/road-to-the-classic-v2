name: CI/CD Pipeline

on:
  push:
    branches: ["*"]
  pull_request:
    branches: ["*"]

  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Cache Dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            ${{ github.workspace }}/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('package-lock.json') }}-${{ hashFiles('src/**/*.js', 'src/**/*.jsx', 'src/**/*.ts', 'src/**/*.tsx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('package-lock.json') }}-

      - name: Set Up Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: "package.json"

      - name: Install Dependencies
        run: npm ci

      - name: Build the Project
        run: npm run build

  sonarqube:
    runs-on: ubuntu-latest

    steps:
      - name: checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: SonarQube Scan
        uses: sonarsource/sonarcloud-github-action@v5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  linting:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Cache Dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.npm 
            node_modules
          key: ${{ runner.os }}-linting-${{ hashFiles('next.config.mjs', '**/*.js', '**/package-lock.json') }}
          restore-keys: |
            linting-${{ runner.os }}-
            ${{ runner.os }}-

      - name: Set Up Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: "package.json"

      - name: Install Dependencies
        run: npm ci

      - name: Bypass Interactive Mode & Run Linting
        run: npm run lint -- --no-interative
